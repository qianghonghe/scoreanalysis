<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scoreanalysis.system.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="cn.scoreanalysis.system.model.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="professionid" jdbcType="INTEGER" property="professionid" />
    <result column="gradeId" jdbcType="INTEGER" property="gradeid" />
    <result column="studentnumber" jdbcType="VARCHAR" property="studentnumber" />
    <result column="studentname" jdbcType="VARCHAR" property="studentname" />
    <result column="studentage" jdbcType="INTEGER" property="studentage" />
    <result column="studentgender" jdbcType="VARCHAR" property="studentgender" />
    <result column="enrollmentdate" jdbcType="DATE" property="enrollmentdate" />
    <result column="studentidentitycard" jdbcType="VARCHAR" property="studentidentitycard" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, classid, professionid, gradeId, studentnumber, studentname, studentage, studentgender, 
    enrollmentdate, studentidentitycard
  </sql>
  <select id="selectByExample" parameterType="cn.scoreanalysis.system.model.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.scoreanalysis.system.model.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.scoreanalysis.system.model.Student">
    insert into student (id, classid, professionid, 
      gradeId, studentnumber, studentname, 
      studentage, studentgender, enrollmentdate, 
      studentidentitycard)
    values (#{id,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{professionid,jdbcType=INTEGER}, 
      #{gradeid,jdbcType=INTEGER}, #{studentnumber,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, 
      #{studentage,jdbcType=INTEGER}, #{studentgender,jdbcType=VARCHAR}, #{enrollmentdate,jdbcType=DATE}, 
      #{studentidentitycard,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.scoreanalysis.system.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="professionid != null">
        professionid,
      </if>
      <if test="gradeid != null">
        gradeId,
      </if>
      <if test="studentnumber != null">
        studentnumber,
      </if>
      <if test="studentname != null">
        studentname,
      </if>
      <if test="studentage != null">
        studentage,
      </if>
      <if test="studentgender != null">
        studentgender,
      </if>
      <if test="enrollmentdate != null">
        enrollmentdate,
      </if>
      <if test="studentidentitycard != null">
        studentidentitycard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="professionid != null">
        #{professionid,jdbcType=INTEGER},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="studentnumber != null">
        #{studentnumber,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentage != null">
        #{studentage,jdbcType=INTEGER},
      </if>
      <if test="studentgender != null">
        #{studentgender,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null">
        #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="studentidentitycard != null">
        #{studentidentitycard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.scoreanalysis.system.model.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.professionid != null">
        professionid = #{record.professionid,jdbcType=INTEGER},
      </if>
      <if test="record.gradeid != null">
        gradeId = #{record.gradeid,jdbcType=INTEGER},
      </if>
      <if test="record.studentnumber != null">
        studentnumber = #{record.studentnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.studentname != null">
        studentname = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.studentage != null">
        studentage = #{record.studentage,jdbcType=INTEGER},
      </if>
      <if test="record.studentgender != null">
        studentgender = #{record.studentgender,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollmentdate != null">
        enrollmentdate = #{record.enrollmentdate,jdbcType=DATE},
      </if>
      <if test="record.studentidentitycard != null">
        studentidentitycard = #{record.studentidentitycard,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=INTEGER},
      classid = #{record.classid,jdbcType=INTEGER},
      professionid = #{record.professionid,jdbcType=INTEGER},
      gradeId = #{record.gradeid,jdbcType=INTEGER},
      studentnumber = #{record.studentnumber,jdbcType=VARCHAR},
      studentname = #{record.studentname,jdbcType=VARCHAR},
      studentage = #{record.studentage,jdbcType=INTEGER},
      studentgender = #{record.studentgender,jdbcType=VARCHAR},
      enrollmentdate = #{record.enrollmentdate,jdbcType=DATE},
      studentidentitycard = #{record.studentidentitycard,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scoreanalysis.system.model.Student">
    update student
    <set>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="professionid != null">
        professionid = #{professionid,jdbcType=INTEGER},
      </if>
      <if test="gradeid != null">
        gradeId = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="studentnumber != null">
        studentnumber = #{studentnumber,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        studentname = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentage != null">
        studentage = #{studentage,jdbcType=INTEGER},
      </if>
      <if test="studentgender != null">
        studentgender = #{studentgender,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null">
        enrollmentdate = #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="studentidentitycard != null">
        studentidentitycard = #{studentidentitycard,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scoreanalysis.system.model.Student">
    update student
    set classid = #{classid,jdbcType=INTEGER},
      professionid = #{professionid,jdbcType=INTEGER},
      gradeId = #{gradeid,jdbcType=INTEGER},
      studentnumber = #{studentnumber,jdbcType=VARCHAR},
      studentname = #{studentname,jdbcType=VARCHAR},
      studentage = #{studentage,jdbcType=INTEGER},
      studentgender = #{studentgender,jdbcType=VARCHAR},
      enrollmentdate = #{enrollmentdate,jdbcType=DATE},
      studentidentitycard = #{studentidentitycard,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>